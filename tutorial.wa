;; tutorial.wa
;; Walley Language Tutorial
;; version 0.0012
;; created by Yiyi Wang
;; Copyright (c) Yiyi Wang. All right reserved

(defn tutorial-test [prompt, required-exp compare-func]
  (set! compare-func (if compare-func compare-func eq?))
  (display prompt)
  (def o (input "> "))
  (display ">> ")
  (def output (eval o))
  (display " ")
  (display output)
  (if (compare-func output required-exp)
    'true
    (begin (display "\nNah, that is not what I want, try again ;)\n")
           (tutorial-test prompt required-exp))))
;; wait...
(defn tutorial-wait [n]
  (if (= n 0) 0 (tutorial-wait (- n 1))))
;; dotimes...
(defn tutorial-dotimes [n func]
  (if (= n 0)
    ()
    (begin (func)
           (tutorial-dotimes (- n 1) func))))
(defn tutorial-rock-paper-scissors-game []
  (display "\n\nHehe, welcome to fight the best rock paper scissors player Yiyi Wang in this world\n")
  (display "please enter 0 for rock, 1 for paper, 2 for scissors\n")
  (display "Ready...\n")
  (tutorial-wait 100000)
  (display "Go!\n")
  (def player-enter (eval (input "\nPlease choose > ")))
  (cond [= player-enter 0] (display "\nYiyi used scissors, U win!!!(T_T)\n")
        [= player-enter 1] (display "\nYiyi used rock, U win!!!(T_T)\n")
        [= player-enter 2] (display "\nYiyi used paper, U win!!!(T_T)\n")
        else (display "\nYiyi didn't know what u used, but u are so pretty(handsome). U win!!!(T_T)\n"))
  (display "\n\nYiyi spent the next 10 years in a mountain studying how to play rps in order to beat u!\n")
  (display "Let'go!\n")
  (defn fake-game-hehehe []
    (def player-enter (eval (input "\nPlease choose > ")))
    (cond [= player-enter 0] (display "\nYiyi used paper, U lose!!!(~*_*)~\n")
          [= player-enter 1] (display "\nYiyi used scissors, U lose!!!~(*_*)~\n")
          [= player-enter 2] (display "\nYiyi used rock, U lose!!!~(*_*~)\n")
          else (begin (display "Wrong choice, please enter 0 for rock, 1 for paper, 2 for scissors\n")
                      (fake-game-hehehe))) ;; here has bug
    )

  ;; hehe, u have to lose 10 times
  (tutorial-dotimes 10 fake-game-hehehe)
  (display "\n\nHaha, it is impossible for u to win me, because I am aweasome!!!\n")
  
  )

(defn tutorial-start []
  (def o ())
  (display "\n\n\nWelcome to the world of Walley Language\n")
  (display "U are now using Walley Language version ")
  (display walley-language-version)
  (display "\n")
  (display "                walley_core version     ")
  (display walley-core-version)
  (display "\n")
  (display "                Tutorial Version        0.0012\n\n")
  (display "Walley Language is a lisp dialect\n")
  (display "It is very easy to use\n")
  (display "And it has the easist syntax in this world\n")
  (display "Actually I should say it 'doesn't' even have 'syntax'")
  (tutorial-test "\nNow try to type number 12 after >\n" 12)
  (display "\nYes, this is how to define a integer\n")
  (tutorial-test "\nNow try to type number 12.3 after >\n" 12.3)
  (display "\nHaha, this is how we define a floating number in walley language\n")
  (tutorial-test "\nGood. good. Now try to type () \n", ())
  (display "\nYep, u just created an empty list!\n")
  (display "It's name is null in walley language, which means \"EMPTY\"\n")
  (display "\nLet's now do something interesting\n")
  (display "In fact, every expression in walley language is just a list\n")
  (display "that is \"code is data, and data is code\"\nI will explain this later\n")
  (display "Let's now do what every programmer will do\nwhen they meet a new programming language\n");
  (tutorial-test "\ntry to type (display \"Hello World\") PS: including the parentheses\n", ())
  (display "\n\nNice, u just said Hello to this World! ;)\n")
  (display "\nLet's now do some math!\n")
  (display "All programming languages support math arithematics, and walley language is the same\n");
  (tutorial-test "try type (+ 3 4) PS: don't forget to type spaces\n", 7)
  (display "\nExcellent, u just did addition, and this is how we write walley language expression\n")
  (display "in a list\n")
  (display "So now try to type (+ 3 4 5).\n PS: Before u press enter, guess what will be print out\n")
  (tutorial-test "", 12)
  (display "\nGreat, u got the correct answer!! ;)\n")
  (display "\nLet's move on\n");
  (display "So how to do subtraction?\nIt is actually the same thing, try to do \"3 - 4\" in Walley Language\nI won't help u this time xD\n")
  (tutorial-test "" -1)
  (display "\nClever!, How about \"3 * 4\"?\n")
  (tutorial-test "", 12)
  (display "\nU are so good! How about \"8 / 12\"\n")
  (tutorial-test "" (/ 8 12))
  (display "\nU see, walley language is clever, it will give u the most accurate solution for each calculation\n")
  (display "integer divide by a integer will give a ratio( or an integer)\n");
  (display "eg (/ 6  2) => 3\n")
  (display "   (/ 6 12) => 1/2\n")
  (display "Try to type (/ 6.0 12) this time, and see what u can get\n")
  (tutorial-test "" (/ 6.0 12))
  (display "\nThis time we got a floating number => 0.5\n")
  (display "Because u passed a floating number as parameter to / function\n")
  (display "Therefore, if u want to get floating number as result, use floating number for calculation\n")
  (display "Now try to guess the answer of (+ 3 (/ 6 2)) and type the answer after >\n")
  (tutorial-test "" 6) 
  (display "\nGreat! So far, we have learnt integer, float, null, ratio data types\n")
  (display "Let's see what a string is\n")
  (display "string in walley language is easy to define\n")
  (display "try type ur first name within \"\"\n")
  (def user-name (input "\"ur first name\"> "))
  (set! user-name (eval user-name))
  (display (str "\nNice to meet u " user-name "!\n"))
  (display "My name is Yiyi Wang(A man that will change the world AHAHAHAHA)\n")
  (display "Alright I was joking.(I don't even have a girl friend, PS: I was 20 years old when I wrote this tutorial)\n")
  (display "Now u have learnt how to define a string, which is within \"\"\n")
  (display "In walley language, there is more than one way to define string\n")
  (display "try to type 'ur_first_name this time(put ' (only one) before ur_first_name)\n ")
  (display "\n")
  (tutorial-test "" user-name string=?)
  (display "\nUsing ' is much simpler. However, when there is space within the string\n")
  (display "We are not able to use ', instead we have to use \"\"\n")
  (display "Now, let's take a break(Because I am very tired)\n")
  (display "Rock Paper Scissors!\n")
  (tutorial-rock-paper-scissors-game)
  
  )


(tutorial-start) ;; start tutorial
